# GitHub Actions Workflow: Publish to MCP Registry
# ==================================================
#
# This workflow publishes the Solr MCP Server to the Model Context Protocol Registry.
#
# Workflow Triggers:
# ------------------
# - Version tags (v*) - Automatically publishes when you push tags like v0.1.0, v1.0.0, etc.
#
# Prerequisites:
# --------------
# 1. Docker images must be published to GHCR by the build-and-publish workflow
# 2. The server.json file must be properly configured
# 3. The Jib configuration must include the MCP annotation
#
# Authentication:
# ---------------
# Uses GitHub OIDC (no secrets required) for authentication with the MCP Registry.
# This requires:
# - id-token: write permission (already configured below)
# - Repository must be public
# - Namespace must be io.github.OWNER/*
#
# Usage:
# ------
# 1. Ensure all changes are committed and pushed
# 2. Create and push a version tag:
#    git tag v0.1.0
#    git push origin v0.1.0
# 3. The workflow will automatically publish to the MCP Registry

name: Publish to MCP Registry

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v0.1.0, v1.0.0, etc.
  workflow_dispatch:  # Allow manual workflow runs from GitHub UI

permissions:
  id-token: write  # Required for OIDC authentication with MCP Registry
  contents: read   # Required to read repository contents

jobs:
  publish:
    name: Publish to MCP Registry
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Extract version from tag (remove 'v' prefix)
      # Example: v1.0.0 -> 1.0.0
      - name: Extract version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Publishing version: $VERSION"

      # Update server.json version to match the tag
      # This ensures the published version matches the Git tag
      - name: Update server.json version
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          # Update main version field
          jq --arg v "$VERSION" '.version = $v' server.json > server.json.tmp
          # Update package version field
          jq --arg v "$VERSION-SNAPSHOT" '.packages[0].version = $v' server.json.tmp > server.json
          rm server.json.tmp
          cat server.json

      # Download the MCP Publisher CLI
      # Fetches the latest release from GitHub
      - name: Download MCP Publisher
        run: |
          curl -L https://github.com/modelcontextprotocol/registry/releases/latest/download/mcp-publisher-linux-amd64.tar.gz | tar xz
          chmod +x mcp-publisher
          ./mcp-publisher --version

      # Authenticate with MCP Registry using GitHub OIDC
      # No secrets required - uses GitHub's built-in OIDC token
      - name: Authenticate with MCP Registry
        run: |
          ./mcp-publisher login github-oidc

      # Publish the server to the MCP Registry
      # This makes the server discoverable by MCP clients
      - name: Publish to MCP Registry
        run: |
          ./mcp-publisher publish

      # Verify the server was published successfully
      # Query the registry to confirm the server is available
      - name: Verify publication
        run: |
          echo "Waiting 10 seconds for registry to update..."
          sleep 10
          echo "Querying registry for published server..."
          curl "https://registry.modelcontextprotocol.io/v0/servers?search=io.github.apache/solr-mcp" | jq .

      # Create a summary of the publication
      - name: Summary
        run: |
          echo "### MCP Server Published Successfully! :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Server Name:** io.github.apache/solr-mcp" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Docker Image:** ghcr.io/apache/solr-mcp-server:${{ steps.version.outputs.version }}-SNAPSHOT" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The server is now discoverable in the MCP Registry!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Registry URL:** https://registry.modelcontextprotocol.io/v0/servers?search=io.github.apache/solr-mcp" >> $GITHUB_STEP_SUMMARY